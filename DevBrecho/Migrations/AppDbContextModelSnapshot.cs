// <auto-generated />
using System;
using DevBrecho.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DevBrecho.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DevBrecho.Models.Bolsa", b =>
                {
                    b.Property<int>("BolsaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("BolsaId"));

                    b.Property<DateTime>("DataDeEntrada")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataMensagem")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("FornecedoraId")
                        .HasColumnType("integer");

                    b.Property<string>("Observacoes")
                        .HasColumnType("text");

                    b.Property<int>("QuantidadeDePecasSemCadastro")
                        .HasColumnType("integer");

                    b.Property<int>("SetorId")
                        .HasColumnType("integer");

                    b.HasKey("BolsaId");

                    b.HasIndex("FornecedoraId");

                    b.HasIndex("SetorId");

                    b.ToTable("Bolsas");
                });

            modelBuilder.Entity("DevBrecho.Models.Fornecedora", b =>
                {
                    b.Property<int>("FornecedoraId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("FornecedoraId"));

                    b.Property<string>("Nome")
                        .HasColumnType("text");

                    b.Property<string>("Telefone")
                        .HasColumnType("text");

                    b.HasKey("FornecedoraId");

                    b.ToTable("Fornecedoras");
                });

            modelBuilder.Entity("DevBrecho.Models.PecaCadastrada", b =>
                {
                    b.Property<int>("PecaCadastradaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("PecaCadastradaId"));

                    b.Property<int>("BolsaId")
                        .HasColumnType("integer");

                    b.Property<string>("CodigoDaPeca")
                        .HasColumnType("text");

                    b.HasKey("PecaCadastradaId");

                    b.HasIndex("BolsaId");

                    b.ToTable("PecasCadastradas");
                });

            modelBuilder.Entity("DevBrecho.Models.Setor", b =>
                {
                    b.Property<int>("SetorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("SetorId"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("SetorId");

                    b.ToTable("Setores");
                });

            modelBuilder.Entity("DevBrecho.Models.Bolsa", b =>
                {
                    b.HasOne("DevBrecho.Models.Fornecedora", "Fornecedora")
                        .WithMany()
                        .HasForeignKey("FornecedoraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DevBrecho.Models.Setor", "Setor")
                        .WithMany("Bolsas")
                        .HasForeignKey("SetorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Fornecedora");

                    b.Navigation("Setor");
                });

            modelBuilder.Entity("DevBrecho.Models.PecaCadastrada", b =>
                {
                    b.HasOne("DevBrecho.Models.Bolsa", "Bolsa")
                        .WithMany("CodigosDePecaCadastrada")
                        .HasForeignKey("BolsaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bolsa");
                });

            modelBuilder.Entity("DevBrecho.Models.Bolsa", b =>
                {
                    b.Navigation("CodigosDePecaCadastrada");
                });

            modelBuilder.Entity("DevBrecho.Models.Setor", b =>
                {
                    b.Navigation("Bolsas");
                });
#pragma warning restore 612, 618
        }
    }
}
